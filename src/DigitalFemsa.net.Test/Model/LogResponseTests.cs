/*
 * Femsa API
 *
 * Femsa sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@femsa.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using DigitalFemsa.net.Model;
using DigitalFemsa.net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace DigitalFemsa.net.Test.Model
{
    /// <summary>
    ///  Class for testing LogResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LogResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for LogResponse
        //private LogResponse instance;

        public LogResponseTests()
        {
            // TODO uncomment below to create an instance of LogResponse
            //instance = new LogResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LogResponse
        /// </summary>
        [Fact]
        public void LogResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" LogResponse
            //Assert.IsType<LogResponse>(instance);
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'IpAddress'
        /// </summary>
        [Fact]
        public void IpAddressTest()
        {
            // TODO unit test for the property 'IpAddress'
        }

        /// <summary>
        /// Test the property 'Livemode'
        /// </summary>
        [Fact]
        public void LivemodeTest()
        {
            // TODO unit test for the property 'Livemode'
        }

        /// <summary>
        /// Test the property 'LoggableId'
        /// </summary>
        [Fact]
        public void LoggableIdTest()
        {
            // TODO unit test for the property 'LoggableId'
        }

        /// <summary>
        /// Test the property 'LoggableType'
        /// </summary>
        [Fact]
        public void LoggableTypeTest()
        {
            // TODO unit test for the property 'LoggableType'
        }

        /// <summary>
        /// Test the property 'Method'
        /// </summary>
        [Fact]
        public void MethodTest()
        {
            // TODO unit test for the property 'Method'
        }

        /// <summary>
        /// Test the property 'OauthTokenId'
        /// </summary>
        [Fact]
        public void OauthTokenIdTest()
        {
            // TODO unit test for the property 'OauthTokenId'
        }

        /// <summary>
        /// Test the property 'QueryString'
        /// </summary>
        [Fact]
        public void QueryStringTest()
        {
            // TODO unit test for the property 'QueryString'
        }

        /// <summary>
        /// Test the property 'Related'
        /// </summary>
        [Fact]
        public void RelatedTest()
        {
            // TODO unit test for the property 'Related'
        }

        /// <summary>
        /// Test the property 'RequestBody'
        /// </summary>
        [Fact]
        public void RequestBodyTest()
        {
            // TODO unit test for the property 'RequestBody'
        }

        /// <summary>
        /// Test the property 'RequestHeaders'
        /// </summary>
        [Fact]
        public void RequestHeadersTest()
        {
            // TODO unit test for the property 'RequestHeaders'
        }

        /// <summary>
        /// Test the property 'ResponseBody'
        /// </summary>
        [Fact]
        public void ResponseBodyTest()
        {
            // TODO unit test for the property 'ResponseBody'
        }

        /// <summary>
        /// Test the property 'ResponseHeaders'
        /// </summary>
        [Fact]
        public void ResponseHeadersTest()
        {
            // TODO unit test for the property 'ResponseHeaders'
        }

        /// <summary>
        /// Test the property 'SearchableTags'
        /// </summary>
        [Fact]
        public void SearchableTagsTest()
        {
            // TODO unit test for the property 'SearchableTags'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }

        /// <summary>
        /// Test the property 'UserAccountId'
        /// </summary>
        [Fact]
        public void UserAccountIdTest()
        {
            // TODO unit test for the property 'UserAccountId'
        }

        /// <summary>
        /// Test the property 'VarVersion'
        /// </summary>
        [Fact]
        public void VarVersionTest()
        {
            // TODO unit test for the property 'VarVersion'
        }
    }
}
